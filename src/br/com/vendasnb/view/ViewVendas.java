/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.vendasnb.view;

import br.com.vendasnb.controller.ControllerProdutos;
import br.com.vendasnb.controller.ControllerProdutosVendasProdutos;
import br.com.vendasnb.controller.ControllerUsuario;
import br.com.vendasnb.controller.ControllerVenda;
import br.com.vendasnb.controller.ControllerVendasProdutos;
import br.com.vendasnb.controller.ControllerVendasUsuario;
import br.com.vendasnb.model.ModelProdutos;
import br.com.vendasnb.model.ModelProdutosVendasProdutos;
import br.com.vendasnb.model.ModelUsuario;
import br.com.vendasnb.model.ModelVenda;
import br.com.vendasnb.model.ModelVendasProdutos;
import br.com.vendasnb.model.ModelVendasUsuario;
import br.com.vendasnb.util.Datas;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Nicolas
 */
public class ViewVendas extends javax.swing.JFrame {

    ControllerUsuario controllerUsuario = new ControllerUsuario();
    ModelUsuario modelUsuario = new ModelUsuario();
    ArrayList<ModelUsuario> listaModelUsuario = new ArrayList<>();

    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();

    ArrayList<ModelVendasUsuario> listaModelVendasUsuario = new ArrayList<>();
    ControllerVendasUsuario controllerVendasUsuario = new ControllerVendasUsuario();

    ControllerVenda controllerVenda = new ControllerVenda();
    ModelVenda modelVenda = new ModelVenda();

    Datas datas = new Datas();

    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendaProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutos = new ArrayList<>();

    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();

    String alterarSalvar;

    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        this.listarUsuario();
        this.listarProdutos();
        this.carregarVendas();
        setLocationRelativeTo(null);
        this.preencherComboBoxProduto();
        this.preencherComboBoxUsuario();
        this.habilitarDesabilitar(false);
        txtVenDesconto.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtVenCodUsu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtVenCodVen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtVenQtdPro = new javax.swing.JTextField();
        bntVendaAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVendasProdutos = new javax.swing.JTable();
        btnVenCancelar = new javax.swing.JButton();
        btnVenNovo = new javax.swing.JButton();
        btnVendaSave = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtVenCodPro = new javax.swing.JTextField();
        txtVenDesconto = new javax.swing.JTextField();
        txtVenValorTotal = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();
        txtVenNomePro = new componentes.UJComboBox();
        txtVenNomeUsu = new componentes.UJComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtVenPesquisar = new javax.swing.JTextField();
        btnVenPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableVendas = new javax.swing.JTable();
        btnVenExcluir = new javax.swing.JButton();
        btnVenEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");

        jLabel1.setText("Código Usu.");

        txtVenCodUsu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVenCodUsuFocusLost(evt);
            }
        });

        jLabel2.setText("Nome do Usuario:");

        txtVenCodVen.setBackground(new java.awt.Color(153, 255, 204));

        jLabel3.setText("Numero da Venda:");

        jLabel4.setText("Quantidade:");

        bntVendaAdd.setBackground(new java.awt.Color(153, 255, 204));
        bntVendaAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/adicionar.png"))); // NOI18N
        bntVendaAdd.setToolTipText("Adicionar");
        bntVendaAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bntVendaAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntVendaAddActionPerformed(evt);
            }
        });

        tableVendasProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Prod.", "Nome Produto", "Quant.", "Valor Uni.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableVendasProdutos);
        if (tableVendasProdutos.getColumnModel().getColumnCount() > 0) {
            tableVendasProdutos.getColumnModel().getColumn(0).setMinWidth(80);
            tableVendasProdutos.getColumnModel().getColumn(0).setPreferredWidth(80);
            tableVendasProdutos.getColumnModel().getColumn(0).setMaxWidth(80);
            tableVendasProdutos.getColumnModel().getColumn(2).setMinWidth(70);
            tableVendasProdutos.getColumnModel().getColumn(2).setPreferredWidth(70);
            tableVendasProdutos.getColumnModel().getColumn(2).setMaxWidth(70);
            tableVendasProdutos.getColumnModel().getColumn(3).setMinWidth(90);
            tableVendasProdutos.getColumnModel().getColumn(3).setPreferredWidth(90);
            tableVendasProdutos.getColumnModel().getColumn(3).setMaxWidth(90);
            tableVendasProdutos.getColumnModel().getColumn(4).setMinWidth(90);
            tableVendasProdutos.getColumnModel().getColumn(4).setPreferredWidth(90);
            tableVendasProdutos.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        btnVenCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/cancelar.png"))); // NOI18N
        btnVenCancelar.setToolTipText("Cancelar");
        btnVenCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVenCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenCancelarActionPerformed(evt);
            }
        });

        btnVenNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/novo.png"))); // NOI18N
        btnVenNovo.setToolTipText("Novo");
        btnVenNovo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVenNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenNovoActionPerformed(evt);
            }
        });

        btnVendaSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/salvar.png"))); // NOI18N
        btnVendaSave.setToolTipText("Salvar");
        btnVendaSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVendaSave.setEnabled(false);
        btnVendaSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaSaveActionPerformed(evt);
            }
        });

        jLabel5.setText("Desconto:");

        jLabel6.setText("Valor Total:");

        jLabel7.setText("Cod Pro.");

        jLabel8.setText("Nome do Produto:");

        txtVenCodPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVenCodProFocusLost(evt);
            }
        });

        txtVenDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVenDescontoFocusLost(evt);
            }
        });
        txtVenDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVenDescontoActionPerformed(evt);
            }
        });

        txtVenValorTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVenValorTotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVenValorTotalFocusLost(evt);
            }
        });
        txtVenValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVenValorTotalActionPerformed(evt);
            }
        });

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/deletar.png"))); // NOI18N
        btnRemove.setToolTipText("Remover");
        btnRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        txtVenNomePro.setAutocompletar(true);
        txtVenNomePro.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                txtVenNomeProPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        txtVenNomePro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVenNomeProActionPerformed(evt);
            }
        });

        txtVenNomeUsu.setAutocompletar(true);
        txtVenNomeUsu.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                txtVenNomeUsuPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        txtVenNomeUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVenNomeUsuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVenCodUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(txtVenCodPro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(txtVenNomePro, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(txtVenNomeUsu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVenQtdPro, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(bntVendaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(txtVenCodVen, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVenDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVenValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnVenCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnVenNovo)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVendaSave)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVenCodUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVenNomeUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVenCodVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVenQtdPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVenCodPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVenNomePro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bntVendaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVenDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVenValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVenNovo)
                    .addComponent(btnVenCancelar)
                    .addComponent(btnVendaSave)
                    .addComponent(btnRemove))
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jLabel9.setText("Pesquisa:");

        btnVenPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/pesquisar.png"))); // NOI18N
        btnVenPesquisar.setToolTipText("Pesquisar");
        btnVenPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVenPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenPesquisarActionPerformed(evt);
            }
        });

        tableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Venda", "Nome Usu.", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableVendas);

        btnVenExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/deletar.png"))); // NOI18N
        btnVenExcluir.setToolTipText("Excluir");
        btnVenExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVenExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenExcluirActionPerformed(evt);
            }
        });

        btnVenEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vendasnb/imagens/editar.png"))); // NOI18N
        btnVenEditar.setToolTipText("Alterar");
        btnVenEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVenEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtVenPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnVenPesquisar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnVenEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnVenExcluir)))
                .addContainerGap(391, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVenPesquisar)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVenPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVenEditar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVenExcluir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consultar/Excluir/Alterar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVenEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenEditarActionPerformed
        // TODO add your handling code here:
        alterarSalvar = "alterar";
        habilitarDesabilitar(true);
        try {
        int linha = tableVendas.getSelectedRow();
        int codigoVenda = (int) tableVendas.getValueAt(linha, 0);
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        DefaultTableModel modelo = (DefaultTableModel) tableVendasProdutos.getModel();
        modelo.setNumRows(0);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            txtVenCodVen.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVenda().getId()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto(),
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getNome(),
                listaModelProdutosVendasProdutos.get(i).getModelVenda().getQuantidade(),
                listaModelProdutosVendasProdutos.get(i).getModelProdutos().getValor(),
                // mutiplicação para o valor total
                listaModelProdutosVendasProdutos.get(i).getModelVenda().getQuantidade()
                * listaModelProdutosVendasProdutos.get(i).getModelProdutos().getValor()
            });
        }
        somarTotalProdutos();
        jTabbedPane1.setSelectedIndex(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum registro selecionado!", "AVISO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnVenEditarActionPerformed

    private void txtVenCodUsuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVenCodUsuFocusLost
        // TODO add your handling code here:
        if (txtVenCodUsu.getText().equals("")) {
            txtVenCodUsu.setText("1");
        } else {
            modelUsuario = controllerUsuario.getUsuarioController(Integer.parseInt(txtVenCodUsu.getText()));
            txtVenNomeUsu.setSelectedItem(modelUsuario.getNomeUsuario());
        }
    }//GEN-LAST:event_txtVenCodUsuFocusLost

    private void txtVenCodProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVenCodProFocusLost
        // TODO add your handling code here:
        if (txtVenCodPro.getText().equals("")) {
            txtVenCodPro.setText("1");
        } else {
            modelProdutos = controllerProdutos.retornaProdutoController(Integer.parseInt(txtVenCodPro.getText()));
            txtVenNomePro.setSelectedItem(modelProdutos.getNome());
        }
    }//GEN-LAST:event_txtVenCodProFocusLost

    private void btnVenExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenExcluirActionPerformed
        // Excluir venda:
        int linha = tableVendas.getSelectedRow();
        int codigoVenda = (int) tableVendas.getValueAt(linha, 0);

        //Voltar com os produtos de volta ao estoque
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        int cont = listaModelProdutosVendasProdutos.size();

        for (int i = 0; i < cont; i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());

            modelProdutos.setEstoque(
                    listaModelProdutosVendasProdutos.get(i).getModelProdutos().getEstoque()
                    + listaModelProdutosVendasProdutos.get(i).getModelVenda().getQuantidade()
            );
            listaModelProdutos.add(modelProdutos);
        }
        if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            //Excluir a venda
            if (this.controllerVenda.excluiiVendaController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "Venda excluído com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnVenExcluirActionPerformed

    private void bntVendaAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntVendaAddActionPerformed
        // Botao adicionar 
        if (txtVenQtdPro.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Você deve preencher todos os campos", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else {
            modelProdutos = controllerProdutos.retornaProdutoController(Integer.parseInt(txtVenCodPro.getText()));
            //adicionar linha na tabela
            DefaultTableModel modelo = (DefaultTableModel) tableVendasProdutos.getModel();
            int cont = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(txtVenQtdPro.getText());
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }
            modelo.addRow(new Object[]{
                modelProdutos.getIdProduto(),
                modelProdutos.getNome(),
                txtVenQtdPro.getText(),
                modelProdutos.getValor(),
                quantidade * modelProdutos.getValor()
            });
            this.somarTotalProdutos();
        }
    }//GEN-LAST:event_bntVendaAddActionPerformed

    private void txtVenDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVenDescontoFocusLost
        // Quando perder o foco da caixa desconto chama a funçao para somar os produtos
        this.somarTotalProdutos();
    }//GEN-LAST:event_txtVenDescontoFocusLost

    private void txtVenValorTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVenValorTotalFocusLost
        // Quando perder o foco da caixa valor total chama a funçao para somar os produtos
        this.somarTotalProdutos();
    }//GEN-LAST:event_txtVenValorTotalFocusLost

    private void btnVenNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenNovoActionPerformed
        // botao novo
        alterarSalvar = "salvar";
        this.limparForm();
        this.habilitarDesabilitar(true);
    }//GEN-LAST:event_btnVenNovoActionPerformed

    private void txtVenValorTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVenValorTotalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVenValorTotalFocusGained

    private void btnVendaSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaSaveActionPerformed
        // Salvar as vendas
        int codigoVenda = 0, codigoProduto = 0;
        listaModelVendasProdutos = new ArrayList<>();

       // if (!txtVenCodVen.getText().equals("")) {
        // modelVenda.setIdVenda(Integer.parseInt(txtVenCodVen.getText()));
       // }
        modelVenda.setUsuarioId(Integer.parseInt(txtVenCodUsu.getText()));

        try {
            modelVenda.setDataVenda(datas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
        }

        modelVenda.setValorLiquido(Double.parseDouble(txtVenValorTotal.getText()));
        modelVenda.setValorBruto(Double.parseDouble(txtVenValorTotal.getText()) + Double.parseDouble(txtVenDesconto.getText()));
        modelVenda.setDesconto(Double.parseDouble(txtVenDesconto.getText()));

        if (alterarSalvar.equals("salvar")) {
            //salva
            //salvar codigo da venda
            codigoVenda = controllerVenda.salvarVendaController(modelVenda);
            if (codigoVenda > 0) {
                JOptionPane.showMessageDialog(this, "Venda salva com sucesso", "Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar venda", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            int cont = tableVendasProdutos.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) tableVendasProdutos.getValueAt(i, 0);
                //venda
                modelVendaProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendaProdutos.setProdutoId(codigoProduto);
                modelVendaProdutos.setVendaId(codigoVenda);
                modelVendaProdutos.setValorUnitario((Double) tableVendasProdutos.getValueAt(i, 3));
                modelVendaProdutos.setQuantidade(Integer.parseInt(tableVendasProdutos.getValueAt(i, 2).toString()));
                //dar baixa no estoque
                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setEstoque(controllerProdutos.retornaProdutoController(codigoProduto).getEstoque()
                        - Integer.parseInt(tableVendasProdutos.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendaProdutos);
                listaModelProdutos.add(modelProdutos);
            }
            // salvar os produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                // alterar o estoque de produtos
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
//                JOptionPane.showMessageDialog(this, "Produtos da venda salva com sucesso", "Atenção", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
                this.limparForm();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar produtos", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //altera
            // INICIO RETORNAR PARA O ESTOQUE EEXCLUIR PRODUTOS DA VENDA
            int linha = tableVendas.getSelectedRow();
            codigoVenda = (int) tableVendas.getValueAt(linha, 0);

            //Voltar com os produtos de volta ao estoque
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            int cont = listaModelProdutosVendasProdutos.size();

            for (int i = 0; i < cont; i++) {
                modelProdutos = new ModelProdutos();
                modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
                modelProdutos.setEstoque(
                        listaModelProdutosVendasProdutos.get(i).getModelProdutos().getEstoque()
                        + listaModelProdutosVendasProdutos.get(i).getModelVenda().getQuantidade()
                );
                listaModelProdutos.add(modelProdutos);
            }
            if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)) {
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                    //Excluir a venda
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
            //FIM RETORNAR PARA O ESTOQUE EEXCLUIR PRODUTOS DA VENDA

            if (controllerVenda.atualiazarVendaController(modelVenda)) {
                JOptionPane.showMessageDialog(this, "Venda alterado com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
            //adicionar produtos na lista para salvar 
            cont = tableVendasProdutos.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) tableVendasProdutos.getValueAt(i, 0);
                //venda
                modelVendaProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                modelVendaProdutos.setProdutoId(codigoProduto);
                modelVendaProdutos.setVendaId(codigoVenda);
                modelVendaProdutos.setValorUnitario((Double) tableVendasProdutos.getValueAt(i, 3));
                modelVendaProdutos.setQuantidade(Integer.parseInt(tableVendasProdutos.getValueAt(i, 2).toString()));
                //dar baixa no estoque
                modelProdutos.setIdProduto(codigoProduto);
                modelProdutos.setEstoque(controllerProdutos.retornaProdutoController(codigoProduto).getEstoque()
                        - Integer.parseInt(tableVendasProdutos.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendaProdutos);
                listaModelProdutos.add(modelProdutos);
            }
            //salvar produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
//                JOptionPane.showMessageDialog(this, "Venda excluído com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
                limparForm();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        }
        this.habilitarDesabilitar(false);
    }//GEN-LAST:event_btnVendaSaveActionPerformed

    private void txtVenDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVenDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVenDescontoActionPerformed

    private void btnVenPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenPesquisarActionPerformed
        // Pesquisar
        DefaultTableModel modelo = (DefaultTableModel) this.tableVendas.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.tableVendas.setRowSorter(classificador);
        
        String texto = txtVenPesquisar.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }//GEN-LAST:event_btnVenPesquisarActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // Remover produtos
        int linha = tableVendasProdutos.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tableVendasProdutos.getModel();
        
        modelo.removeRow(linha);
        this.somarTotalProdutos();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnVenCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenCancelarActionPerformed
        // TODO add your handling code here:
        this.limparForm();
        this.habilitarDesabilitar(false);
    }//GEN-LAST:event_btnVenCancelarActionPerformed

    private void txtVenNomeProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVenNomeProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVenNomeProActionPerformed

    private void txtVenNomeUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVenNomeUsuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVenNomeUsuActionPerformed

    private void txtVenNomeUsuPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_txtVenNomeUsuPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (txtVenNomeUsu.isPopupVisible()) {
            this.preencherComboBoxUsuario();
        }
    }//GEN-LAST:event_txtVenNomeUsuPopupMenuWillBecomeInvisible

    private void txtVenNomeProPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_txtVenNomeProPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (txtVenNomePro.isPopupVisible()) {
            this.preencherComboBoxProduto();
        }
    }//GEN-LAST:event_txtVenNomeProPopupMenuWillBecomeInvisible

    private void txtVenValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVenValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVenValorTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    /**
     * *
     * preenche o combobox com todos usuarios
     */
    private void listarUsuario() {
        listaModelUsuario = controllerUsuario.getListaUsuarioController();
        txtVenNomeUsu.removeAllItems();
        for (int i = 0; i < listaModelUsuario.size(); i++) {
            txtVenNomeUsu.addItem(listaModelUsuario.get(i).getNomeUsuario());
        }
    }

    /**
     * *
     * Preeche combobox com todos produtos
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.retornaListaProdutoController();
        txtVenNomePro.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            txtVenNomePro.addItem(listaModelProdutos.get(i).getNome());
        }
    }

    /**
     * *
     * carrega as vendas do banco de dados
     */
    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) tableVendas.getModel();
        listaModelVendasUsuario = controllerVendasUsuario.getListaVendasUsuarioController();
        modelo.setNumRows(0);
        for (int i = 0; i < listaModelVendasUsuario.size(); i++) {
            modelo.addRow(new Object[]{
                listaModelVendasUsuario.get(i).getModelVenda().getIdVenda(),
                listaModelVendasUsuario.get(i).getModelUsuario().getNomeUsuario(),
                listaModelVendasUsuario.get(i).getModelVenda().getDataVenda()
            });
        }
    }

    /**
     * *
     * Soma todos os produtos da venda
     */
    private void somarTotalProdutos() {
        double soma = 0, valor;
        int cont = tableVendasProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) tableVendasProdutos.getValueAt(i, 4);
            soma = soma + valor;
        }
        txtVenValorTotal.setText(String.valueOf(soma));
        this.aplicaDesconto();
    }

    /**
     * Aplica Desconto ao valor final da venda
     */
    private void aplicaDesconto() {
        try {
            txtVenValorTotal.setText(String.valueOf(
                    Double.parseDouble(txtVenValorTotal.getText()) - Double.parseDouble(txtVenDesconto.getText())));
        } catch (NumberFormatException e) {
        }

    }

    /**
     * *
     * preenche combo box
     */
    private void preencherComboBoxUsuario() {
        modelUsuario = controllerUsuario.getUsuarioController(txtVenNomeUsu.getSelectedItem().toString());
        txtVenCodUsu.setText(String.valueOf(modelUsuario.getIdUsuario()));
    }

    private void preencherComboBoxProduto() {
        modelProdutos = controllerProdutos.retornaProdutoController(txtVenNomePro.getSelectedItem().toString());
        txtVenCodPro.setText(String.valueOf(modelProdutos.getIdProduto()));
    }

    private void limparForm() {
        txtVenCodVen.setText("");
        txtVenQtdPro.setText("");
        txtVenDesconto.setText("");
        txtVenValorTotal.setText("");
        txtVenDesconto.setText("0");
        DefaultTableModel modelo = (DefaultTableModel) tableVendasProdutos.getModel();
        modelo.setNumRows(0);
    }
    
    private void habilitarDesabilitar(boolean condicao){
        txtVenQtdPro.setEnabled(condicao);
        btnVendaSave.setEnabled(condicao);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntVendaAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnVenCancelar;
    private javax.swing.JButton btnVenEditar;
    private javax.swing.JButton btnVenExcluir;
    private javax.swing.JButton btnVenNovo;
    private javax.swing.JButton btnVenPesquisar;
    private javax.swing.JButton btnVendaSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tableVendas;
    private javax.swing.JTable tableVendasProdutos;
    private javax.swing.JTextField txtVenCodPro;
    private javax.swing.JTextField txtVenCodUsu;
    private javax.swing.JTextField txtVenCodVen;
    private javax.swing.JTextField txtVenDesconto;
    private componentes.UJComboBox txtVenNomePro;
    private componentes.UJComboBox txtVenNomeUsu;
    private javax.swing.JTextField txtVenPesquisar;
    private javax.swing.JTextField txtVenQtdPro;
    private javax.swing.JTextField txtVenValorTotal;
    // End of variables declaration//GEN-END:variables
}
